[gd_scene load_steps=4 format=2]

[ext_resource path="res://PixelFont.tres" type="DynamicFont" id=1]

[sub_resource type="StyleBoxFlat" id=1]
bg_color = Color( 0.145098, 0.309804, 0.176471, 1 )
anti_aliasing = false

[sub_resource type="GDScript" id=2]
script/source = "extends TextEdit

func _ready():
	createPrompt()
	grab_focus()
	
func _input(event):
	if event is InputEventKey:
		if event.is_pressed():
			if event.scancode == KEY_UP or event.scancode == KEY_DOWN:
				get_tree().set_input_as_handled()
			elif event.scancode == KEY_BACKSPACE or event.scancode == KEY_LEFT:
				if cursor_get_column() <= 2:
					get_tree().set_input_as_handled()
			elif event.scancode == KEY_ENTER:
				var input = get_line(cursor_get_line()).right(2)
				text += '\\n'
				handleInput(input)
				text += '\\n'
				createPrompt()
				get_tree().set_input_as_handled()
				
func output(string):
	text += string
	
func createPrompt():
	text += '> '
	cursor_set_line(get_line_count(), true, false)
	cursor_set_column(2)
	
func handleInput(string: String):
	var methodName = 'command_' + string.to_lower().strip_edges()
	
	print(methodName)
	
	if self.has_method(methodName):
		self.call(methodName)
	else:
		output('ERROR: Command not found')
		
func command_help():
	output('watwatwat')"

[node name="Node2D" type="Node2D"]

[node name="TextEdit" type="TextEdit" parent="."]
margin_right = 960.0
margin_bottom = 528.0
mouse_filter = 2
custom_styles/read_only = SubResource( 1 )
custom_styles/normal = SubResource( 1 )
custom_fonts/font = ExtResource( 1 )
custom_colors/current_line_color = Color( 0.2, 0.337255, 0.207843, 1 )
highlight_current_line = true
context_menu_enabled = false
wrap_enabled = true
script = SubResource( 2 )
[connection signal="text_changed" from="TextEdit" to="." method="inputChanged"]
